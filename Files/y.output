Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_definition

    6 $@1: /* empty */

    7 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

    8 $@2: /* empty */

    9 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement

   10 parameter_list: parameter_list COMMA type_specifier ID
   11               | parameter_list COMMA type_specifier
   12               | type_specifier ID
   13               | type_specifier

   14 compound_statement: LCURL statements RCURL
   15                   | LCURL RCURL

   16 var_declaration: type_specifier declaration_list SEMICOLON

   17 type_specifier: INT
   18               | FLOAT
   19               | VOID

   20 declaration_list: declaration_list COMMA ID
   21                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   22                 | ID
   23                 | ID LTHIRD CONST_INT RTHIRD

   24 statements: statement
   25           | statements statement

   26 statement: var_declaration
   27          | func_definition
   28          | expression_statement
   29          | compound_statement
   30          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   31          | IF LPAREN expression RPAREN statement
   32          | IF LPAREN expression RPAREN statement ELSE statement
   33          | WHILE LPAREN expression RPAREN statement
   34          | PRINTLN LPAREN ID RPAREN SEMICOLON
   35          | RETURN expression SEMICOLON

   36 expression_statement: SEMICOLON
   37                     | expression SEMICOLON

   38 variable: ID
   39         | ID LTHIRD expression RTHIRD

   40 expression: logic_expression
   41           | variable ASSIGNOP logic_expression

   42 logic_expression: rel_expression
   43                 | rel_expression LOGICOP rel_expression

   44 rel_expression: simple_expression
   45               | simple_expression RELOP simple_expression

   46 simple_expression: term
   47                  | simple_expression ADDOP term

   48 term: unary_expression
   49     | term MULOP unary_expression

   50 unary_expression: ADDOP unary_expression
   51                 | NOT unary_expression
   52                 | factor

   53 factor: variable
   54       | ID LPAREN argument_list RPAREN
   55       | LPAREN expression RPAREN
   56       | CONST_INT
   57       | CONST_FLOAT
   58       | variable INCOP
   59       | variable DECOP

   60 argument_list: arguments
   61              | /* empty */

   62 arguments: arguments COMMA logic_expression
   63          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 31 32
ELSE (259) 32
FOR (260) 30
WHILE (261) 33
DO (262)
BREAK (263)
INT (264) 17
CHAR (265)
FLOAT (266) 18
DOUBLE (267)
VOID (268) 19
RETURN (269) 35
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
PRINTLN (274) 34
ADDOP (275) 47 50
MULOP (276) 49
INCOP (277) 58
DECOP (278) 59
RELOP (279) 45
ASSIGNOP (280) 41
LOGICOP (281) 43
NOT (282) 51
LPAREN (283) 7 9 30 31 32 33 34 54 55
RPAREN (284) 7 9 30 31 32 33 34 54 55
LCURL (285) 14 15
RCURL (286) 14 15
LTHIRD (287) 21 23 39
RTHIRD (288) 21 23 39
COMMA (289) 10 11 20 21 62
SEMICOLON (290) 16 34 35 36 37
CONST_INT (291) 21 23 56
CONST_FLOAT (292) 57
ID (293) 7 9 10 12 20 21 22 23 34 38 39 54
LOWER_THAN_ELSE (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5, on right: 2 3
func_definition (44)
    on left: 7 9, on right: 5 27
$@1 (45)
    on left: 6, on right: 7
$@2 (46)
    on left: 8, on right: 9
parameter_list (47)
    on left: 10 11 12 13, on right: 7 10 11
compound_statement (48)
    on left: 14 15, on right: 7 9 29
var_declaration (49)
    on left: 16, on right: 4 26
type_specifier (50)
    on left: 17 18 19, on right: 7 9 10 11 12 13 16
declaration_list (51)
    on left: 20 21 22 23, on right: 16 20 21
statements (52)
    on left: 24 25, on right: 14 25
statement (53)
    on left: 26 27 28 29 30 31 32 33 34 35, on right: 24 25 30 31 32
    33
expression_statement (54)
    on left: 36 37, on right: 28 30
variable (55)
    on left: 38 39, on right: 41 53 58 59
expression (56)
    on left: 40 41, on right: 30 31 32 33 35 37 39 55
logic_expression (57)
    on left: 42 43, on right: 40 41 62 63
rel_expression (58)
    on left: 44 45, on right: 42 43
simple_expression (59)
    on left: 46 47, on right: 44 45 47
term (60)
    on left: 48 49, on right: 46 47 49
unary_expression (61)
    on left: 50 51 52, on right: 48 49 50 51
factor (62)
    on left: 53 54 55 56 57 58 59, on right: 52
argument_list (63)
    on left: 60 61, on right: 54
arguments (64)
    on left: 62 63, on right: 60 62


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start            go to state 4
    program          go to state 5
    unit             go to state 6
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


State 1

   17 type_specifier: INT .

    $default  reduce using rule 17 (type_specifier)


State 2

   18 type_specifier: FLOAT .

    $default  reduce using rule 18 (type_specifier)


State 3

   19 type_specifier: VOID .

    $default  reduce using rule 19 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 10


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit             go to state 11
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_definition .

    $default  reduce using rule 5 (unit)


State 8

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 9

    7 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
    9                | type_specifier . ID LPAREN RPAREN $@2 compound_statement
   16 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 12

    declaration_list  go to state 13


State 10

    0 $accept: start $end .

    $default  accept


State 11

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 12

    7 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
    9                | type_specifier ID . LPAREN RPAREN $@2 compound_statement
   22 declaration_list: ID .
   23                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 14
    LTHIRD  shift, and go to state 15

    $default  reduce using rule 22 (declaration_list)


State 13

   16 var_declaration: type_specifier declaration_list . SEMICOLON
   20 declaration_list: declaration_list . COMMA ID
   21                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


State 14

    7 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
    9                | type_specifier ID LPAREN . RPAREN $@2 compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 18

    parameter_list  go to state 19
    type_specifier  go to state 20


State 15

   23 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 21


State 16

   20 declaration_list: declaration_list COMMA . ID
   21                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 22


State 17

   16 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 16 (var_declaration)


State 18

    9 func_definition: type_specifier ID LPAREN RPAREN . $@2 compound_statement

    $default  reduce using rule 8 ($@2)

    $@2  go to state 23


State 19

    7 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   10 parameter_list: parameter_list . COMMA type_specifier ID
   11               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 24
    COMMA   shift, and go to state 25


State 20

   12 parameter_list: type_specifier . ID
   13               | type_specifier .

    ID  shift, and go to state 26

    $default  reduce using rule 13 (parameter_list)


State 21

   23 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 27


State 22

   20 declaration_list: declaration_list COMMA ID .
   21                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 28

    $default  reduce using rule 20 (declaration_list)


State 23

    9 func_definition: type_specifier ID LPAREN RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 29

    compound_statement  go to state 30


State 24

    7 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    $default  reduce using rule 6 ($@1)

    $@1  go to state 31


State 25

   10 parameter_list: parameter_list COMMA . type_specifier ID
   11               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 32


State 26

   12 parameter_list: type_specifier ID .

    $default  reduce using rule 12 (parameter_list)


State 27

   23 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 23 (declaration_list)


State 28

   21 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 33


State 29

   14 compound_statement: LCURL . statements RCURL
   15                   | LCURL . RCURL

    IF           shift, and go to state 34
    FOR          shift, and go to state 35
    WHILE        shift, and go to state 36
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 37
    PRINTLN      shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 29
    RCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    func_definition       go to state 47
    compound_statement    go to state 48
    var_declaration       go to state 49
    type_specifier        go to state 9
    statements            go to state 50
    statement             go to state 51
    expression_statement  go to state 52
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 30

    9 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement .

    $default  reduce using rule 9 (func_definition)


State 31

    7 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 29

    compound_statement  go to state 61


State 32

   10 parameter_list: parameter_list COMMA type_specifier . ID
   11               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 62

    $default  reduce using rule 11 (parameter_list)


State 33

   21 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 63


State 34

   31 statement: IF . LPAREN expression RPAREN statement
   32          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 64


State 35

   30 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 65


State 36

   33 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 66


State 37

   35 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 53
    expression         go to state 67
    logic_expression   go to state 55
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 38

   34 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 68


State 39

   50 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable          go to state 69
    unary_expression  go to state 70
    factor            go to state 60


State 40

   51 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable          go to state 69
    unary_expression  go to state 71
    factor            go to state 60


State 41

   55 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 53
    expression         go to state 72
    logic_expression   go to state 55
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 42

   15 compound_statement: LCURL RCURL .

    $default  reduce using rule 15 (compound_statement)


State 43

   36 expression_statement: SEMICOLON .

    $default  reduce using rule 36 (expression_statement)


State 44

   56 factor: CONST_INT .

    $default  reduce using rule 56 (factor)


State 45

   57 factor: CONST_FLOAT .

    $default  reduce using rule 57 (factor)


State 46

   38 variable: ID .
   39         | ID . LTHIRD expression RTHIRD
   54 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 73
    LTHIRD  shift, and go to state 74

    $default  reduce using rule 38 (variable)


State 47

   27 statement: func_definition .

    $default  reduce using rule 27 (statement)


State 48

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 49

   26 statement: var_declaration .

    $default  reduce using rule 26 (statement)


State 50

   14 compound_statement: LCURL statements . RCURL
   25 statements: statements . statement

    IF           shift, and go to state 34
    FOR          shift, and go to state 35
    WHILE        shift, and go to state 36
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 37
    PRINTLN      shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 29
    RCURL        shift, and go to state 75
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    func_definition       go to state 47
    compound_statement    go to state 48
    var_declaration       go to state 49
    type_specifier        go to state 9
    statement             go to state 76
    expression_statement  go to state 52
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 51

   24 statements: statement .

    $default  reduce using rule 24 (statements)


State 52

   28 statement: expression_statement .

    $default  reduce using rule 28 (statement)


State 53

   41 expression: variable . ASSIGNOP logic_expression
   53 factor: variable .
   58       | variable . INCOP
   59       | variable . DECOP

    INCOP     shift, and go to state 77
    DECOP     shift, and go to state 78
    ASSIGNOP  shift, and go to state 79

    $default  reduce using rule 53 (factor)


State 54

   37 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 55

   40 expression: logic_expression .

    $default  reduce using rule 40 (expression)


State 56

   42 logic_expression: rel_expression .
   43                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 81

    $default  reduce using rule 42 (logic_expression)


State 57

   44 rel_expression: simple_expression .
   45               | simple_expression . RELOP simple_expression
   47 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 82
    RELOP  shift, and go to state 83

    $default  reduce using rule 44 (rel_expression)


State 58

   46 simple_expression: term .
   49 term: term . MULOP unary_expression

    MULOP  shift, and go to state 84

    $default  reduce using rule 46 (simple_expression)


State 59

   48 term: unary_expression .

    $default  reduce using rule 48 (term)


State 60

   52 unary_expression: factor .

    $default  reduce using rule 52 (unary_expression)


State 61

    7 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 7 (func_definition)


State 62

   10 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 10 (parameter_list)


State 63

   21 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 21 (declaration_list)


State 64

   31 statement: IF LPAREN . expression RPAREN statement
   32          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 53
    expression         go to state 85
    logic_expression   go to state 55
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 65

   30 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    expression_statement  go to state 86
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 66

   33 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 53
    expression         go to state 87
    logic_expression   go to state 55
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 67

   35 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 68

   34 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 89


State 69

   53 factor: variable .
   58       | variable . INCOP
   59       | variable . DECOP

    INCOP  shift, and go to state 77
    DECOP  shift, and go to state 78

    $default  reduce using rule 53 (factor)


State 70

   50 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 50 (unary_expression)


State 71

   51 unary_expression: NOT unary_expression .

    $default  reduce using rule 51 (unary_expression)


State 72

   55 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 90


State 73

   54 factor: ID LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    $default  reduce using rule 61 (argument_list)

    variable           go to state 69
    logic_expression   go to state 91
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60
    argument_list      go to state 92
    arguments          go to state 93


State 74

   39 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 53
    expression         go to state 94
    logic_expression   go to state 55
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 75

   14 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 14 (compound_statement)


State 76

   25 statements: statements statement .

    $default  reduce using rule 25 (statements)


State 77

   58 factor: variable INCOP .

    $default  reduce using rule 58 (factor)


State 78

   59 factor: variable DECOP .

    $default  reduce using rule 59 (factor)


State 79

   41 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 69
    logic_expression   go to state 95
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 80

   37 expression_statement: expression SEMICOLON .

    $default  reduce using rule 37 (expression_statement)


State 81

   43 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 69
    rel_expression     go to state 96
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 82

   47 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable          go to state 69
    term              go to state 97
    unary_expression  go to state 59
    factor            go to state 60


State 83

   45 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 69
    simple_expression  go to state 98
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 84

   49 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable          go to state 69
    unary_expression  go to state 99
    factor            go to state 60


State 85

   31 statement: IF LPAREN expression . RPAREN statement
   32          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 100


State 86

   30 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    expression_statement  go to state 101
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 87

   33 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 102


State 88

   35 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 35 (statement)


State 89

   34 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 103


State 90

   55 factor: LPAREN expression RPAREN .

    $default  reduce using rule 55 (factor)


State 91

   63 arguments: logic_expression .

    $default  reduce using rule 63 (arguments)


State 92

   54 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 104


State 93

   60 argument_list: arguments .
   62 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 105

    $default  reduce using rule 60 (argument_list)


State 94

   39 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 106


State 95

   41 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 41 (expression)


State 96

   43 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 43 (logic_expression)


State 97

   47 simple_expression: simple_expression ADDOP term .
   49 term: term . MULOP unary_expression

    MULOP  shift, and go to state 84

    $default  reduce using rule 47 (simple_expression)


State 98

   45 rel_expression: simple_expression RELOP simple_expression .
   47 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 82

    $default  reduce using rule 45 (rel_expression)


State 99

   49 term: term MULOP unary_expression .

    $default  reduce using rule 49 (term)


State 100

   31 statement: IF LPAREN expression RPAREN . statement
   32          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 34
    FOR          shift, and go to state 35
    WHILE        shift, and go to state 36
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 37
    PRINTLN      shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 29
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    func_definition       go to state 47
    compound_statement    go to state 48
    var_declaration       go to state 49
    type_specifier        go to state 9
    statement             go to state 107
    expression_statement  go to state 52
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 101

   30 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 53
    expression         go to state 108
    logic_expression   go to state 55
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 102

   33 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 34
    FOR          shift, and go to state 35
    WHILE        shift, and go to state 36
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 37
    PRINTLN      shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 29
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    func_definition       go to state 47
    compound_statement    go to state 48
    var_declaration       go to state 49
    type_specifier        go to state 9
    statement             go to state 109
    expression_statement  go to state 52
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 103

   34 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 104

   54 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 54 (factor)


State 105

   62 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    variable           go to state 69
    logic_expression   go to state 111
    rel_expression     go to state 56
    simple_expression  go to state 57
    term               go to state 58
    unary_expression   go to state 59
    factor             go to state 60


State 106

   39 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 39 (variable)


State 107

   31 statement: IF LPAREN expression RPAREN statement .
   32          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 112

    $default  reduce using rule 31 (statement)


State 108

   30 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 113


State 109

   33 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 33 (statement)


State 110

   34 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 34 (statement)


State 111

   62 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 62 (arguments)


State 112

   32 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 34
    FOR          shift, and go to state 35
    WHILE        shift, and go to state 36
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 37
    PRINTLN      shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 29
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    func_definition       go to state 47
    compound_statement    go to state 48
    var_declaration       go to state 49
    type_specifier        go to state 9
    statement             go to state 114
    expression_statement  go to state 52
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 113

   30 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 34
    FOR          shift, and go to state 35
    WHILE        shift, and go to state 36
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 37
    PRINTLN      shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 29
    SEMICOLON    shift, and go to state 43
    CONST_INT    shift, and go to state 44
    CONST_FLOAT  shift, and go to state 45
    ID           shift, and go to state 46

    func_definition       go to state 47
    compound_statement    go to state 48
    var_declaration       go to state 49
    type_specifier        go to state 9
    statement             go to state 115
    expression_statement  go to state 52
    variable              go to state 53
    expression            go to state 54
    logic_expression      go to state 55
    rel_expression        go to state 56
    simple_expression     go to state 57
    term                  go to state 58
    unary_expression      go to state 59
    factor                go to state 60


State 114

   32 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 32 (statement)


State 115

   30 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 30 (statement)
