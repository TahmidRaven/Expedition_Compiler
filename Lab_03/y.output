Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_definition

    6 $@1: /* empty */

    7 $@2: /* empty */

    8 func_definition: type_specifier ID LPAREN $@1 parameter_list RPAREN $@2 compound_statement

    9 $@3: /* empty */

   10 $@4: /* empty */

   11 func_definition: type_specifier ID LPAREN $@3 RPAREN $@4 compound_statement

   12 parameter_list: parameter_list COMMA type_specifier ID
   13               | parameter_list COMMA type_specifier
   14               | type_specifier ID
   15               | type_specifier

   16 $@5: /* empty */

   17 compound_statement: LCURL $@5 statements RCURL

   18 $@6: /* empty */

   19 compound_statement: LCURL $@6 RCURL

   20 var_declaration: type_specifier declaration_list SEMICOLON

   21 type_specifier: INT
   22               | FLOAT
   23               | VOID

   24 declaration_list: declaration_list COMMA ID
   25                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   26                 | ID
   27                 | ID LTHIRD CONST_INT RTHIRD

   28 statements: statement
   29           | statements statement

   30 statement: var_declaration
   31          | func_definition
   32          | expression_statement
   33          | compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | IF LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement ELSE statement
   37          | WHILE LPAREN expression RPAREN statement
   38          | PRINTLN LPAREN ID RPAREN SEMICOLON
   39          | RETURN expression SEMICOLON

   40 expression_statement: SEMICOLON
   41                     | expression SEMICOLON

   42 variable: ID
   43         | ID LTHIRD expression RTHIRD

   44 expression: logic_expression
   45           | variable ASSIGNOP logic_expression

   46 logic_expression: rel_expression
   47                 | rel_expression LOGICOP rel_expression

   48 rel_expression: simple_expression
   49               | simple_expression RELOP simple_expression

   50 simple_expression: term
   51                  | simple_expression ADDOP term

   52 term: unary_expression
   53     | term MULOP unary_expression

   54 unary_expression: ADDOP unary_expression
   55                 | NOT unary_expression
   56                 | factor

   57 factor: variable
   58       | ID LPAREN argument_list RPAREN
   59       | LPAREN expression RPAREN
   60       | CONST_INT
   61       | CONST_FLOAT
   62       | variable INCOP
   63       | variable DECOP

   64 argument_list: arguments
   65              | /* empty */

   66 arguments: arguments COMMA logic_expression
   67          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 35 36
ELSE (259) 36
FOR (260) 34
WHILE (261) 37
DO (262)
BREAK (263)
INT (264) 21
CHAR (265)
FLOAT (266) 22
DOUBLE (267)
VOID (268) 23
RETURN (269) 39
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
PRINTLN (274) 38
ADDOP (275) 51 54
MULOP (276) 53
INCOP (277) 62
DECOP (278) 63
RELOP (279) 49
ASSIGNOP (280) 45
LOGICOP (281) 47
NOT (282) 55
LPAREN (283) 8 11 34 35 36 37 38 58 59
RPAREN (284) 8 11 34 35 36 37 38 58 59
LCURL (285) 17 19
RCURL (286) 17 19
LTHIRD (287) 25 27 43
RTHIRD (288) 25 27 43
COMMA (289) 12 13 24 25 66
SEMICOLON (290) 20 38 39 40 41
CONST_INT (291) 25 27 60
CONST_FLOAT (292) 61
ID (293) 8 11 12 14 24 25 26 27 38 42 43 58
LOWER_THAN_ELSE (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5, on right: 2 3
func_definition (44)
    on left: 8 11, on right: 5 31
$@1 (45)
    on left: 6, on right: 8
$@2 (46)
    on left: 7, on right: 8
$@3 (47)
    on left: 9, on right: 11
$@4 (48)
    on left: 10, on right: 11
parameter_list (49)
    on left: 12 13 14 15, on right: 8 12 13
compound_statement (50)
    on left: 17 19, on right: 8 11 33
$@5 (51)
    on left: 16, on right: 17
$@6 (52)
    on left: 18, on right: 19
var_declaration (53)
    on left: 20, on right: 4 30
type_specifier (54)
    on left: 21 22 23, on right: 8 11 12 13 14 15 20
declaration_list (55)
    on left: 24 25 26 27, on right: 20 24 25
statements (56)
    on left: 28 29, on right: 17 29
statement (57)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 28 29 34 35 36
    37
expression_statement (58)
    on left: 40 41, on right: 32 34
variable (59)
    on left: 42 43, on right: 45 57 62 63
expression (60)
    on left: 44 45, on right: 34 35 36 37 39 41 43 59
logic_expression (61)
    on left: 46 47, on right: 44 45 66 67
rel_expression (62)
    on left: 48 49, on right: 46 47
simple_expression (63)
    on left: 50 51, on right: 48 49 51
term (64)
    on left: 52 53, on right: 50 51 53
unary_expression (65)
    on left: 54 55 56, on right: 52 53 54 55
factor (66)
    on left: 57 58 59 60 61 62 63, on right: 56
argument_list (67)
    on left: 64 65, on right: 58
arguments (68)
    on left: 66 67, on right: 64 66


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start            go to state 4
    program          go to state 5
    unit             go to state 6
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


State 1

   21 type_specifier: INT .

    $default  reduce using rule 21 (type_specifier)


State 2

   22 type_specifier: FLOAT .

    $default  reduce using rule 22 (type_specifier)


State 3

   23 type_specifier: VOID .

    $default  reduce using rule 23 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 10


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit             go to state 11
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_definition .

    $default  reduce using rule 5 (unit)


State 8

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 9

    8 func_definition: type_specifier . ID LPAREN $@1 parameter_list RPAREN $@2 compound_statement
   11                | type_specifier . ID LPAREN $@3 RPAREN $@4 compound_statement
   20 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 12

    declaration_list  go to state 13


State 10

    0 $accept: start $end .

    $default  accept


State 11

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 12

    8 func_definition: type_specifier ID . LPAREN $@1 parameter_list RPAREN $@2 compound_statement
   11                | type_specifier ID . LPAREN $@3 RPAREN $@4 compound_statement
   26 declaration_list: ID .
   27                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 14
    LTHIRD  shift, and go to state 15

    $default  reduce using rule 26 (declaration_list)


State 13

   20 var_declaration: type_specifier declaration_list . SEMICOLON
   24 declaration_list: declaration_list . COMMA ID
   25                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


State 14

    8 func_definition: type_specifier ID LPAREN . $@1 parameter_list RPAREN $@2 compound_statement
   11                | type_specifier ID LPAREN . $@3 RPAREN $@4 compound_statement

    RPAREN    reduce using rule 9 ($@3)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 18
    $@3  go to state 19


State 15

   27 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 20


State 16

   24 declaration_list: declaration_list COMMA . ID
   25                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 21


State 17

   20 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 20 (var_declaration)


State 18

    8 func_definition: type_specifier ID LPAREN $@1 . parameter_list RPAREN $@2 compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    parameter_list  go to state 22
    type_specifier  go to state 23


State 19

   11 func_definition: type_specifier ID LPAREN $@3 . RPAREN $@4 compound_statement

    RPAREN  shift, and go to state 24


State 20

   27 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 25


State 21

   24 declaration_list: declaration_list COMMA ID .
   25                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 26

    $default  reduce using rule 24 (declaration_list)


State 22

    8 func_definition: type_specifier ID LPAREN $@1 parameter_list . RPAREN $@2 compound_statement
   12 parameter_list: parameter_list . COMMA type_specifier ID
   13               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 27
    COMMA   shift, and go to state 28


State 23

   14 parameter_list: type_specifier . ID
   15               | type_specifier .

    ID  shift, and go to state 29

    $default  reduce using rule 15 (parameter_list)


State 24

   11 func_definition: type_specifier ID LPAREN $@3 RPAREN . $@4 compound_statement

    $default  reduce using rule 10 ($@4)

    $@4  go to state 30


State 25

   27 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


State 26

   25 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 31


State 27

    8 func_definition: type_specifier ID LPAREN $@1 parameter_list RPAREN . $@2 compound_statement

    $default  reduce using rule 7 ($@2)

    $@2  go to state 32


State 28

   12 parameter_list: parameter_list COMMA . type_specifier ID
   13               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 33


State 29

   14 parameter_list: type_specifier ID .

    $default  reduce using rule 14 (parameter_list)


State 30

   11 func_definition: type_specifier ID LPAREN $@3 RPAREN $@4 . compound_statement

    LCURL  shift, and go to state 34

    compound_statement  go to state 35


State 31

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 36


State 32

    8 func_definition: type_specifier ID LPAREN $@1 parameter_list RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 34

    compound_statement  go to state 37


State 33

   12 parameter_list: parameter_list COMMA type_specifier . ID
   13               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 38

    $default  reduce using rule 13 (parameter_list)


State 34

   17 compound_statement: LCURL . $@5 statements RCURL
   19                   | LCURL . $@6 RCURL

    RCURL     reduce using rule 18 ($@6)
    $default  reduce using rule 16 ($@5)

    $@5  go to state 39
    $@6  go to state 40


State 35

   11 func_definition: type_specifier ID LPAREN $@3 RPAREN $@4 compound_statement .

    $default  reduce using rule 11 (func_definition)


State 36

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 37

    8 func_definition: type_specifier ID LPAREN $@1 parameter_list RPAREN $@2 compound_statement .

    $default  reduce using rule 8 (func_definition)


State 38

   12 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 12 (parameter_list)


State 39

   17 compound_statement: LCURL $@5 . statements RCURL

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 9
    statements            go to state 56
    statement             go to state 57
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 40

   19 compound_statement: LCURL $@6 . RCURL

    RCURL  shift, and go to state 67


State 41

   35 statement: IF . LPAREN expression RPAREN statement
   36          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 68


State 42

   34 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 69


State 43

   37 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 70


State 44

   39 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 59
    expression         go to state 71
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 45

   38 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 72


State 46

   54 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable          go to state 73
    unary_expression  go to state 74
    factor            go to state 66


State 47

   55 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable          go to state 73
    unary_expression  go to state 75
    factor            go to state 66


State 48

   59 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 59
    expression         go to state 76
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 49

   40 expression_statement: SEMICOLON .

    $default  reduce using rule 40 (expression_statement)


State 50

   60 factor: CONST_INT .

    $default  reduce using rule 60 (factor)


State 51

   61 factor: CONST_FLOAT .

    $default  reduce using rule 61 (factor)


State 52

   42 variable: ID .
   43         | ID . LTHIRD expression RTHIRD
   58 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 77
    LTHIRD  shift, and go to state 78

    $default  reduce using rule 42 (variable)


State 53

   31 statement: func_definition .

    $default  reduce using rule 31 (statement)


State 54

   33 statement: compound_statement .

    $default  reduce using rule 33 (statement)


State 55

   30 statement: var_declaration .

    $default  reduce using rule 30 (statement)


State 56

   17 compound_statement: LCURL $@5 statements . RCURL
   29 statements: statements . statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 34
    RCURL        shift, and go to state 79
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 9
    statement             go to state 80
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 57

   28 statements: statement .

    $default  reduce using rule 28 (statements)


State 58

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


State 59

   45 expression: variable . ASSIGNOP logic_expression
   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP     shift, and go to state 81
    DECOP     shift, and go to state 82
    ASSIGNOP  shift, and go to state 83

    $default  reduce using rule 57 (factor)


State 60

   41 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 61

   44 expression: logic_expression .

    $default  reduce using rule 44 (expression)


State 62

   46 logic_expression: rel_expression .
   47                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 85

    $default  reduce using rule 46 (logic_expression)


State 63

   48 rel_expression: simple_expression .
   49               | simple_expression . RELOP simple_expression
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86
    RELOP  shift, and go to state 87

    $default  reduce using rule 48 (rel_expression)


State 64

   50 simple_expression: term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 50 (simple_expression)


State 65

   52 term: unary_expression .

    $default  reduce using rule 52 (term)


State 66

   56 unary_expression: factor .

    $default  reduce using rule 56 (unary_expression)


State 67

   19 compound_statement: LCURL $@6 RCURL .

    $default  reduce using rule 19 (compound_statement)


State 68

   35 statement: IF LPAREN . expression RPAREN statement
   36          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 59
    expression         go to state 89
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 69

   34 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    expression_statement  go to state 90
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 70

   37 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 59
    expression         go to state 91
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 71

   39 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 72

   38 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 93


State 73

   57 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP  shift, and go to state 81
    DECOP  shift, and go to state 82

    $default  reduce using rule 57 (factor)


State 74

   54 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 75

   55 unary_expression: NOT unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 76

   59 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 94


State 77

   58 factor: ID LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    $default  reduce using rule 65 (argument_list)

    variable           go to state 73
    logic_expression   go to state 95
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66
    argument_list      go to state 96
    arguments          go to state 97


State 78

   43 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 59
    expression         go to state 98
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 79

   17 compound_statement: LCURL $@5 statements RCURL .

    $default  reduce using rule 17 (compound_statement)


State 80

   29 statements: statements statement .

    $default  reduce using rule 29 (statements)


State 81

   62 factor: variable INCOP .

    $default  reduce using rule 62 (factor)


State 82

   63 factor: variable DECOP .

    $default  reduce using rule 63 (factor)


State 83

   45 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 73
    logic_expression   go to state 99
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 84

   41 expression_statement: expression SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 85

   47 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 73
    rel_expression     go to state 100
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 86

   51 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable          go to state 73
    term              go to state 101
    unary_expression  go to state 65
    factor            go to state 66


State 87

   49 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 73
    simple_expression  go to state 102
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 88

   53 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable          go to state 73
    unary_expression  go to state 103
    factor            go to state 66


State 89

   35 statement: IF LPAREN expression . RPAREN statement
   36          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 104


State 90

   34 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    expression_statement  go to state 105
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 91

   37 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 106


State 92

   39 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 39 (statement)


State 93

   38 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 107


State 94

   59 factor: LPAREN expression RPAREN .

    $default  reduce using rule 59 (factor)


State 95

   67 arguments: logic_expression .

    $default  reduce using rule 67 (arguments)


State 96

   58 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 108


State 97

   64 argument_list: arguments .
   66 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 109

    $default  reduce using rule 64 (argument_list)


State 98

   43 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 110


State 99

   45 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 45 (expression)


State 100

   47 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 47 (logic_expression)


State 101

   51 simple_expression: simple_expression ADDOP term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 51 (simple_expression)


State 102

   49 rel_expression: simple_expression RELOP simple_expression .
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86

    $default  reduce using rule 49 (rel_expression)


State 103

   53 term: term MULOP unary_expression .

    $default  reduce using rule 53 (term)


State 104

   35 statement: IF LPAREN expression RPAREN . statement
   36          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 9
    statement             go to state 111
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 105

   34 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 59
    expression         go to state 112
    logic_expression   go to state 61
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 106

   37 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 9
    statement             go to state 113
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 107

   38 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 108

   58 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 58 (factor)


State 109

   66 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    variable           go to state 73
    logic_expression   go to state 115
    rel_expression     go to state 62
    simple_expression  go to state 63
    term               go to state 64
    unary_expression   go to state 65
    factor             go to state 66


State 110

   43 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 43 (variable)


State 111

   35 statement: IF LPAREN expression RPAREN statement .
   36          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 116

    $default  reduce using rule 35 (statement)


State 112

   34 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 117


State 113

   37 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 37 (statement)


State 114

   38 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 38 (statement)


State 115

   66 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 66 (arguments)


State 116

   36 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 9
    statement             go to state 118
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 117

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    WHILE        shift, and go to state 43
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 44
    PRINTLN      shift, and go to state 45
    ADDOP        shift, and go to state 46
    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 48
    LCURL        shift, and go to state 34
    SEMICOLON    shift, and go to state 49
    CONST_INT    shift, and go to state 50
    CONST_FLOAT  shift, and go to state 51
    ID           shift, and go to state 52

    func_definition       go to state 53
    compound_statement    go to state 54
    var_declaration       go to state 55
    type_specifier        go to state 9
    statement             go to state 119
    expression_statement  go to state 58
    variable              go to state 59
    expression            go to state 60
    logic_expression      go to state 61
    rel_expression        go to state 62
    simple_expression     go to state 63
    term                  go to state 64
    unary_expression      go to state 65
    factor                go to state 66


State 118

   36 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 36 (statement)


State 119

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 34 (statement)
